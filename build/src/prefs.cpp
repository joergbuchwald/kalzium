// This file is generated by kconfig_compiler_kf5 from kalzium.kcfg.
// All changes you do to this file will be lost.

#include "prefs.h"

#include <qglobal.h>
#include <QFile>

class PrefsHelper
{
  public:
    PrefsHelper() : q(nullptr) {}
    ~PrefsHelper() { delete q; }
    Prefs *q;
};
Q_GLOBAL_STATIC(PrefsHelper, s_globalPrefs)
Prefs *Prefs::self()
{
  if (!s_globalPrefs()->q) {
    new Prefs;
    s_globalPrefs()->q->read();
  }

  return s_globalPrefs()->q;
}

Prefs::Prefs(  )
  : KConfigSkeleton( QStringLiteral( "kalziumrc" ) )
{
  Q_ASSERT(!s_globalPrefs()->q);
  s_globalPrefs()->q = this;
  setCurrentGroup( QStringLiteral( "Periodic Table" ) );

  KConfigSkeleton::ItemInt  *itemSchemaPSE;
  itemSchemaPSE = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "schemaPSE" ), mSchemaPSE, 0 );
  addItem( itemSchemaPSE, QStringLiteral( "schemaPSE" ) );
  KConfigSkeleton::ItemInt  *itemColorschemebox;
  itemColorschemebox = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "colorschemebox" ), mColorschemebox, 1 );
  addItem( itemColorschemebox, QStringLiteral( "colorschemebox" ) );
  KConfigSkeleton::ItemInt  *itemGradient;
  itemGradient = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "gradient" ), mGradient, 1 );
  addItem( itemGradient, QStringLiteral( "gradient" ) );
  KConfigSkeleton::ItemInt  *itemNumeration;
  itemNumeration = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "numeration" ), mNumeration, 1 );
  addItem( itemNumeration, QStringLiteral( "numeration" ) );
  KConfigSkeleton::ItemBool  *itemShowlegend;
  itemShowlegend = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "showlegend" ), mShowlegend, true );
  addItem( itemShowlegend, QStringLiteral( "showlegend" ) );
  KConfigSkeleton::ItemInt  *itemPselook;
  itemPselook = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "pselook" ), mPselook, 0 );
  addItem( itemPselook, QStringLiteral( "pselook" ) );
  KConfigSkeleton::ItemInt  *itemTable;
  itemTable = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "table" ), mTable, 0 );
  addItem( itemTable, QStringLiteral( "table" ) );

  setCurrentGroup( QStringLiteral( "Logarithmic Gradients" ) );

  KConfigSkeleton::ItemBool  *itemLogarithmicCovalentRadiusGradient;
  itemLogarithmicCovalentRadiusGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicCovalentRadiusGradient" ), mLogarithmicCovalentRadiusGradient, false );
  addItem( itemLogarithmicCovalentRadiusGradient, QStringLiteral( "LogarithmicCovalentRadiusGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicVanDerWaalsRadiusGradient;
  itemLogarithmicVanDerWaalsRadiusGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicVanDerWaalsRadiusGradient" ), mLogarithmicVanDerWaalsRadiusGradient, false );
  addItem( itemLogarithmicVanDerWaalsRadiusGradient, QStringLiteral( "LogarithmicVanDerWaalsRadiusGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicMassGradient;
  itemLogarithmicMassGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicMassGradient" ), mLogarithmicMassGradient, true );
  addItem( itemLogarithmicMassGradient, QStringLiteral( "LogarithmicMassGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicBoilingPointGradient;
  itemLogarithmicBoilingPointGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicBoilingPointGradient" ), mLogarithmicBoilingPointGradient, true );
  addItem( itemLogarithmicBoilingPointGradient, QStringLiteral( "LogarithmicBoilingPointGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicMeltingPointGradient;
  itemLogarithmicMeltingPointGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicMeltingPointGradient" ), mLogarithmicMeltingPointGradient, true );
  addItem( itemLogarithmicMeltingPointGradient, QStringLiteral( "LogarithmicMeltingPointGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicElectronegativityGradient;
  itemLogarithmicElectronegativityGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicElectronegativityGradient" ), mLogarithmicElectronegativityGradient, false );
  addItem( itemLogarithmicElectronegativityGradient, QStringLiteral( "LogarithmicElectronegativityGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicDiscoverydateGradient;
  itemLogarithmicDiscoverydateGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicDiscoverydateGradient" ), mLogarithmicDiscoverydateGradient, false );
  addItem( itemLogarithmicDiscoverydateGradient, QStringLiteral( "LogarithmicDiscoverydateGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicElectronaffinityGradient;
  itemLogarithmicElectronaffinityGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicElectronaffinityGradient" ), mLogarithmicElectronaffinityGradient, true );
  addItem( itemLogarithmicElectronaffinityGradient, QStringLiteral( "LogarithmicElectronaffinityGradient" ) );
  KConfigSkeleton::ItemBool  *itemLogarithmicIonizationGradient;
  itemLogarithmicIonizationGradient = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LogarithmicIonizationGradient" ), mLogarithmicIonizationGradient, true );
  addItem( itemLogarithmicIonizationGradient, QStringLiteral( "LogarithmicIonizationGradient" ) );

  setCurrentGroup( QStringLiteral( "Colors" ) );

  KConfigSkeleton::ItemInt  *itemColorgradientbox;
  itemColorgradientbox = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "colorgradientbox" ), mColorgradientbox, 0 );
  addItem( itemColorgradientbox, QStringLiteral( "colorgradientbox" ) );
  KConfigSkeleton::ItemColor  *itemNoscheme;
  itemNoscheme = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "noscheme" ), mNoscheme, QColor( "#2C72C7" ) );
  addItem( itemNoscheme, QStringLiteral( "noscheme" ) );
  KConfigSkeleton::ItemColor  *itemColor_liquid;
  itemColor_liquid = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "color_liquid" ), mColor_liquid, QColor( "#2C72C8" ) );
  addItem( itemColor_liquid, QStringLiteral( "color_liquid" ) );
  KConfigSkeleton::ItemColor  *itemColor_solid;
  itemColor_solid = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "color_solid" ), mColor_solid, QColor( "#E85753" ) );
  addItem( itemColor_solid, QStringLiteral( "color_solid" ) );
  KConfigSkeleton::ItemColor  *itemColor_vapor;
  itemColor_vapor = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "color_vapor" ), mColor_vapor, QColor( "#77B754" ) );
  addItem( itemColor_vapor, QStringLiteral( "color_vapor" ) );
  KConfigSkeleton::ItemColor  *itemColor_radioactive;
  itemColor_radioactive = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "color_radioactive" ), mColor_radioactive, QColor( "#FFFFFF" ) );
  addItem( itemColor_radioactive, QStringLiteral( "color_radioactive" ) );
  KConfigSkeleton::ItemColor  *itemColor_artificial;
  itemColor_artificial = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "color_artificial" ), mColor_artificial, QColor( "#FFA94E" ) );
  addItem( itemColor_artificial, QStringLiteral( "color_artificial" ) );
  KConfigSkeleton::ItemColor  *itemBlock_s;
  itemBlock_s = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "block_s" ), mBlock_s, QColor( "#B14F9A" ) );
  addItem( itemBlock_s, QStringLiteral( "block_s" ) );
  KConfigSkeleton::ItemColor  *itemBlock_p;
  itemBlock_p = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "block_p" ), mBlock_p, QColor( "#77B753" ) );
  addItem( itemBlock_p, QStringLiteral( "block_p" ) );
  KConfigSkeleton::ItemColor  *itemBlock_d;
  itemBlock_d = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "block_d" ), mBlock_d, QColor( "#FFEB55" ) );
  addItem( itemBlock_d, QStringLiteral( "block_d" ) );
  KConfigSkeleton::ItemColor  *itemBlock_f;
  itemBlock_f = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "block_f" ), mBlock_f, QColor( "#E85752" ) );
  addItem( itemBlock_f, QStringLiteral( "block_f" ) );
  KConfigSkeleton::ItemColor  *itemGroup_1;
  itemGroup_1 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_1" ), mGroup_1, QColor( "#B14F9A" ) );
  addItem( itemGroup_1, QStringLiteral( "group_1" ) );
  KConfigSkeleton::ItemColor  *itemGroup_2;
  itemGroup_2 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_2" ), mGroup_2, QColor( "#2C72C7" ) );
  addItem( itemGroup_2, QStringLiteral( "group_2" ) );
  KConfigSkeleton::ItemColor  *itemGroup_3;
  itemGroup_3 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_3" ), mGroup_3, QColor( "#00B377" ) );
  addItem( itemGroup_3, QStringLiteral( "group_3" ) );
  KConfigSkeleton::ItemColor  *itemGroup_4;
  itemGroup_4 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_4" ), mGroup_4, QColor( "#E85752" ) );
  addItem( itemGroup_4, QStringLiteral( "group_4" ) );
  KConfigSkeleton::ItemColor  *itemGroup_5;
  itemGroup_5 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_5" ), mGroup_5, QColor( "#FFEB55" ) );
  addItem( itemGroup_5, QStringLiteral( "group_5" ) );
  KConfigSkeleton::ItemColor  *itemGroup_6;
  itemGroup_6 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_6" ), mGroup_6, QColor( "#644A9B" ) );
  addItem( itemGroup_6, QStringLiteral( "group_6" ) );
  KConfigSkeleton::ItemColor  *itemGroup_7;
  itemGroup_7 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_7" ), mGroup_7, QColor( "#E85290" ) );
  addItem( itemGroup_7, QStringLiteral( "group_7" ) );
  KConfigSkeleton::ItemColor  *itemGroup_8;
  itemGroup_8 = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "group_8" ), mGroup_8, QColor( "#00A7B3" ) );
  addItem( itemGroup_8, QStringLiteral( "group_8" ) );
  KConfigSkeleton::ItemColor  *itemAlkalie;
  itemAlkalie = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "alkalie" ), mAlkalie, QColor( "#FFEB55" ) );
  addItem( itemAlkalie, QStringLiteral( "alkalie" ) );
  KConfigSkeleton::ItemColor  *itemRare;
  itemRare = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "rare" ), mRare, QColor( "#644A9B" ) );
  addItem( itemRare, QStringLiteral( "rare" ) );
  KConfigSkeleton::ItemColor  *itemNonmetal;
  itemNonmetal = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "nonmetal" ), mNonmetal, QColor( "#F29B68" ) );
  addItem( itemNonmetal, QStringLiteral( "nonmetal" ) );
  KConfigSkeleton::ItemColor  *itemAlkaline;
  itemAlkaline = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "alkaline" ), mAlkaline, QColor( "#00A7B3" ) );
  addItem( itemAlkaline, QStringLiteral( "alkaline" ) );
  KConfigSkeleton::ItemColor  *itemOther_metal;
  itemOther_metal = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "other_metal" ), mOther_metal, QColor( "#8F6B32" ) );
  addItem( itemOther_metal, QStringLiteral( "other_metal" ) );
  KConfigSkeleton::ItemColor  *itemHalogene;
  itemHalogene = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "halogene" ), mHalogene, QColor( "#77B753" ) );
  addItem( itemHalogene, QStringLiteral( "halogene" ) );
  KConfigSkeleton::ItemColor  *itemTransition;
  itemTransition = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "transition" ), mTransition, QColor( "#00B377" ) );
  addItem( itemTransition, QStringLiteral( "transition" ) );
  KConfigSkeleton::ItemColor  *itemNoble_gas;
  itemNoble_gas = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "noble_gas" ), mNoble_gas, QColor( "#E85290" ) );
  addItem( itemNoble_gas, QStringLiteral( "noble_gas" ) );
  KConfigSkeleton::ItemColor  *itemMetalloid;
  itemMetalloid = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "metalloid" ), mMetalloid, QColor( "#E8D888" ) );
  addItem( itemMetalloid, QStringLiteral( "metalloid" ) );
  KConfigSkeleton::ItemColor  *itemMaxColor;
  itemMaxColor = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "MaxColor" ), mMaxColor, QColor( "#FF0000" ) );
  addItem( itemMaxColor, QStringLiteral( "MaxColor" ) );
  KConfigSkeleton::ItemColor  *itemMinColor;
  itemMinColor = new KConfigSkeleton::ItemColor( currentGroup(), QStringLiteral( "MinColor" ), mMinColor, QColor( "#FFFFFF" ) );
  addItem( itemMinColor, QStringLiteral( "MinColor" ) );

  setCurrentGroup( QStringLiteral( "Units" ) );

  KConfigSkeleton::ItemInt  *itemEnergiesUnit;
  itemEnergiesUnit = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "energiesUnit" ), mEnergiesUnit, 7022 );
  addItem( itemEnergiesUnit, QStringLiteral( "energiesUnit" ) );
  KConfigSkeleton::ItemInt  *itemTemperatureUnit;
  itemTemperatureUnit = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "temperatureUnit" ), mTemperatureUnit, 6000 );
  addItem( itemTemperatureUnit, QStringLiteral( "temperatureUnit" ) );
  KConfigSkeleton::ItemInt  *itemLengthUnit;
  itemLengthUnit = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "lengthUnit" ), mLengthUnit, 2016 );
  addItem( itemLengthUnit, QStringLiteral( "lengthUnit" ) );
  KConfigSkeleton::ItemInt  *itemCombobox_energies;
  itemCombobox_energies = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "combobox_energies" ), mCombobox_energies, 0 );
  addItem( itemCombobox_energies, QStringLiteral( "combobox_energies" ) );
  KConfigSkeleton::ItemInt  *itemCombobox_temperature;
  itemCombobox_temperature = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "combobox_temperature" ), mCombobox_temperature, 0 );
  addItem( itemCombobox_temperature, QStringLiteral( "combobox_temperature" ) );
  KConfigSkeleton::ItemInt  *itemCombobox_length;
  itemCombobox_length = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "combobox_length" ), mCombobox_length, 0 );
  addItem( itemCombobox_length, QStringLiteral( "combobox_length" ) );
  KConfigSkeleton::ItemBool  *itemSchemaSelected;
  itemSchemaSelected = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "schemaSelected" ), mSchemaSelected, true );
  addItem( itemSchemaSelected, QStringLiteral( "schemaSelected" ) );

  setCurrentGroup( QStringLiteral( "Spectrum" ) );

  KConfigSkeleton::ItemInt  *itemSpectrumWavelengthUnit;
  itemSpectrumWavelengthUnit = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "spectrumWavelengthUnit" ), mSpectrumWavelengthUnit, 2015 );
  addItem( itemSpectrumWavelengthUnit, QStringLiteral( "spectrumWavelengthUnit" ) );
  KConfigSkeleton::ItemInt  *itemSpectrumType;
  itemSpectrumType = new KConfigSkeleton::ItemInt( currentGroup(), QStringLiteral( "spectrumType" ), mSpectrumType, 0 );
  addItem( itemSpectrumType, QStringLiteral( "spectrumType" ) );

  setCurrentGroup( QStringLiteral( "Calculator" ) );

  KConfigSkeleton::ItemBool  *itemMass;
  itemMass = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "mass" ), mMass );
  addItem( itemMass, QStringLiteral( "mass" ) );
  KConfigSkeleton::ItemBool  *itemIdeal;
  itemIdeal = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "ideal" ), mIdeal, 1 );
  addItem( itemIdeal, QStringLiteral( "ideal" ) );
  KConfigSkeleton::ItemBool  *itemSoluteMass;
  itemSoluteMass = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "soluteMass" ), mSoluteMass );
  addItem( itemSoluteMass, QStringLiteral( "soluteMass" ) );
  KConfigSkeleton::ItemBool  *itemSolventVolume;
  itemSolventVolume = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "solventVolume" ), mSolventVolume );
  addItem( itemSolventVolume, QStringLiteral( "solventVolume" ) );
  KConfigSkeleton::ItemBool  *itemAlias;
  itemAlias = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "alias" ), mAlias );
  addItem( itemAlias, QStringLiteral( "alias" ) );
  KConfigSkeleton::ItemBool  *itemAddAlias;
  itemAddAlias = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "addAlias" ), mAddAlias );
  addItem( itemAddAlias, QStringLiteral( "addAlias" ) );

  setCurrentGroup( QStringLiteral( "Sidebar" ) );

  KConfigSkeleton::ItemBool  *itemShowsidebar;
  itemShowsidebar = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "showsidebar" ), mShowsidebar, true );
  addItem( itemShowsidebar, QStringLiteral( "showsidebar" ) );
}

Prefs::~Prefs()
{
  s_globalPrefs()->q = nullptr;
}

